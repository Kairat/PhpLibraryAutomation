====================PhpLibraryAutomation====================Введение========Это образовательный проект для студентов Иркутского национального исследовательского университета. Он содержит методические материалы для курсовых работ на тему "Автоматизация процессов" на примере основных библиотечных процессов.Код данного проекта не предназначен для применения в реальных условиях.Основные возможности пакета:* Поиск и расформатирование записей.* Создание и модификация записей, сохранение записей в базе данных на сервере.* Работа с поисковым словарем: просмотр терминов и постингов.* Администраторские функции: получение списка пользователей, его модификация, передача списка на сервер, создание и удаление баз данных.Пакет состоит из одного файла ``Nerpa.php`` и зависит от двух расширений: ``json`` и ``sockets``, входящих в стандартную поставку PHP.Поддерживается PHP, начиная с версии 5.4 (как 32-битные, так и 64-битные версии интерпретатора). Более ранние версии PHP будут выдавать ошибки, т. к. пакет использует языковые возможности, появившиеся в PHP 5.4.**ВАЖНО** В ``Nerpa`` предполагается, что системная кодировка символов PHP -- UTF-8. В большинстве случаев это так, но если системная кодировка будет переопределена, то часть строк, участвующих в обмене с сервером, будет испорчена.Установка=========Подключение ``Nerpa`` к своему проекту в этом случае тривиально: достаточно скачать с GitHub файл `Nerpa.php`, положить его рядом с другими файлами с исходным кодом и сослаться на него, например, в директиве `require` или `include`:.. code-block:: php    require_once 'Nerpa.php';Файл ``Nerpa.php`` содержит в себе весь необходимый код.Однако предпочтительным способом является подключение библиотеки ``Nerpa`` с помощью Composer:.. image:: img/phpstorm.png    :alt: Подключение в интерфейсе PhpStormВ файле ``composer.json`` достаточно добавить директиву ``require``, ссылающуюся на пакет ``amironov73/nerpa``:.. code-block:: json    {      "name": "vendor_name/package_name",      "description": "description_text",      "require": {        "amironov73/nerpa": "dev-master"      }    }Composer создаёт в файле ``vendor/autoload.php`` автоматический загрузчик классов, которым можно воспользоваться так:.. code-block:: php    // подключаем сгенерированный загрузчик    require __DIR__ . '/../vendor/autoload.php';    $connection = new Nerpa\Connection();    $record = new Nerpa\MarcRecord();    // и так далееКлассы и функции пакета ``Nerpa`` помещены в пространство имён ``Nerpa`` (см. предыдущий пример кода).Примеры программ================Ниже прилагается пример простой программы. Сначала находятся и загружаются 10 первых библиографических записей, в которых автором является А. С. Пушкин. Показано нахождение значения поля с заданным тегом и подполя с заданным кодом. Также показано расформатирование записи в формат ``brief``.**ВАЖНО!** Обратите внимание, что ``Nerpa`` полагается на то, что исходные тексты программ записаны в системной кодировке UTF-8. Поэтому, если кодировка исходных текстов будет отличаться от ожидаемой, литералы будут искажены и программа может перестать работать.Лучший вариант -- избегать употребления в тексте программы литералов с национальными символами. В наших примерах такие литералы употребляются исключительно для простоты изложения... code-block:: php    require_once 'Nerpa.php';    try {        // Подключаемся к серверу        $connection = new Nerpa\Connection();        $connectString = 'host=127.0.0.1;user=librarian;password=secret;';        $connection->parseConnectionString($connectString);        if (!$connection->connect()) {            echo "Не удалось подключиться!";            echo Nerpa\describe_error($connection->lastError);            die(1);        }        // Общие сведения о сервере        echo "<p>Версия сервера: <b>{$connection->serverVersion}</b><br/>";        echo "Интервал: <b>{$connection->interval}</b> мин.<br/>";        // Из INI-файла можно получить настройки для клиента        $ini = $connection->iniFile;        $dbnnamecat = $ini->getValue('Main', 'DBNNAMECAT');        echo "DBNNAMECAT: <b>{$dbnnamecat}</b></p>\n";        // Получаем список доступных баз данных        $databases = $connection->listDatabases('1..' . $dbnnamecat);        echo "<p>Имеются базы данных: <b>" . implode(', ', $databases) . "</b></p>\n";        // Находим записи с автором "Пушкин"        $found = $connection->search('"A=Пушкин$"');        echo "<p>Всего найдено записей: " . count($found) . "</p>\n";        if (count($found) > 10) {            // Ограничиваемся первыми 10 записями            $found = array_slice($found, 0, 10);        }        foreach ($found as $mfn) {            // Считываем запись с сервера            $record = $connection->readRecord($mfn);            // Получаем значение поля/подполя            $title = $record->fm(200, 'a');            echo "<p><b>Заглавие:</b> {$title}<br/>";            // Расформатируем запись на севере            $description = $connection->formatRecord('@brief', $mfn);            echo "<b>Биб. описание:</b> {$description}</p>\n";        }        // Отключаемся от сервера        $connection->disconnect();    }    catch (Exception $exception) {        echo "ОШИБКА: " . $exception;    }Вышеприведённая программа сгенерирует примерно такую веб-страницу:.. image:: img/example1.png    :alt: example1В следующей программе создается и отправляется на сервер 10 записей. Показано добавление в запись полей с подполями... code-block:: php    require_once 'Nerpa.php';    try {        // Подключаемся к серверу        $connection = new Nerpa\Connection();        $connectString = 'host=127.0.0.1;user=librarian;password=secret;';        $connection->parseConnectionString($connectString);        if (!$connection->connect()) {            echo "Не удалось подключиться!";            echo Nerpa\describe_error($connection->lastError);            die(1);        }        // Записи будут помещаться в базу SANDBOX        $connection->database = 'SANDBOX';        for ($i = 0; $i < 10; $i++) {            // Создаем запись            $record = new Nerpa\MarcRecord();            // Наполняем ее полями: первый автор (поле с подолями),            $record->add(700)                ->add('a', 'Миронов')                ->add('b', 'А. В.')                ->add('g', 'Алексей Владимирович');            // заглавие (поле с подполями),            $record->add(200)                ->add('a', "Автоматизация библиотеки: версия {$i}.0")                ->add('e', 'руководство пользователя');            // выходные данные (поле с подполями),            $record->add(210)                ->add('a', 'Иркутск')                ->add('c', 'ИРНИТУ')                ->add('d', '2018');            // рабочий лист (поле без подполей).            $record->add(920, 'PAZK');            // Отсылаем запись на сервер.            // Обратно приходит запись,            // обработанная AUTOIN.GBL.            $connection->writeRecord($record);            // Распечатываем обработанную запись            echo '<p>' . $record->encode('<br/>') . '</p>';        }        // Отключаемся от сервера        $connection->disconnect();    }    catch (Exception $exception) {        echo "ОШИБКА: " . $exception;    }